#include<bits/stdc++.h>
using namespace std;
vector<string> visit;
stack<int> s;

void addEdge(vector<int> g[],int u,int v){
    g[u].push_back(v);
}
void dfsUtil(vector<int> g[],int u){
    visit[u]="yes";
    for(auto i=g[u].begin();i!=g[u].end();i++){
        if(visit[*i]=="no"){
            dfsUtil(g,*i);
        }
    }
    s.push(u);
}
void dfs(vector<int> g[],int V){
    visit.assign(V,"no");
    for(int i=0;i<V;i++){
        if(visit[i]=="no"){
            dfsUtil(g,i);
        }
    }
}
int main(){
    int n = 8; 
    vector <int> g[n];   
    addEdge(g, 0, 2); 
    addEdge(g, 1, 2); 
    addEdge(g, 1, 3); 
    addEdge(g, 2, 4); 
    addEdge(g, 3, 5); 
    addEdge(g, 4, 5); 
    addEdge(g, 5, 6); 
    addEdge(g, 4, 7); 
    dfs(g, n); 
    while(!s.empty()){
        printf(" %d ",s.top());
        s.pop();
    }
    return 0;
}
